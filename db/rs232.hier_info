|top_rs232
clk => clk.IN2
rstn => rstn.IN2
rx => rx.IN1
tx <= tx:tx_0.tx


|top_rs232|rx:rx_0
clk => out_flag~reg0.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => fin_flag.CLK
clk => d_rx_data[0].CLK
clk => d_rx_data[1].CLK
clk => d_rx_data[2].CLK
clk => d_rx_data[3].CLK
clk => d_rx_data[4].CLK
clk => d_rx_data[5].CLK
clk => d_rx_data[6].CLK
clk => d_rx_data[7].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => bit_flag.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => bit_cnt[4].CLK
clk => bit_cnt[5].CLK
clk => bit_cnt[6].CLK
clk => bit_cnt[7].CLK
clk => bit_cnt[8].CLK
clk => bit_cnt[9].CLK
clk => bit_cnt[10].CLK
clk => bit_cnt[11].CLK
clk => bit_cnt[12].CLK
clk => bit_cnt[13].CLK
clk => bit_cnt[14].CLK
clk => bit_cnt[15].CLK
clk => bit_cnt[16].CLK
clk => bit_cnt[17].CLK
clk => bit_cnt[18].CLK
clk => bit_cnt[19].CLK
clk => bit_cnt[20].CLK
clk => start_en.CLK
clk => start_flag.CLK
clk => d_flip_2.CLK
clk => d_flip_1.CLK
clk => d_flip_0.CLK
rstn => bit_cnt[0].ACLR
rstn => bit_cnt[1].ACLR
rstn => bit_cnt[2].ACLR
rstn => bit_cnt[3].ACLR
rstn => bit_cnt[4].ACLR
rstn => bit_cnt[5].ACLR
rstn => bit_cnt[6].ACLR
rstn => bit_cnt[7].ACLR
rstn => bit_cnt[8].ACLR
rstn => bit_cnt[9].ACLR
rstn => bit_cnt[10].ACLR
rstn => bit_cnt[11].ACLR
rstn => bit_cnt[12].ACLR
rstn => bit_cnt[13].ACLR
rstn => bit_cnt[14].ACLR
rstn => bit_cnt[15].ACLR
rstn => bit_cnt[16].ACLR
rstn => bit_cnt[17].ACLR
rstn => bit_cnt[18].ACLR
rstn => bit_cnt[19].ACLR
rstn => bit_cnt[20].ACLR
rstn => rx_data[0]~reg0.ACLR
rstn => rx_data[1]~reg0.ACLR
rstn => rx_data[2]~reg0.ACLR
rstn => rx_data[3]~reg0.ACLR
rstn => rx_data[4]~reg0.ACLR
rstn => rx_data[5]~reg0.ACLR
rstn => rx_data[6]~reg0.ACLR
rstn => rx_data[7]~reg0.ACLR
rstn => out_flag~reg0.ACLR
rstn => d_flip_2.ACLR
rstn => d_flip_1.ACLR
rstn => d_flip_0.ACLR
rstn => start_flag.ACLR
rstn => start_en.ACLR
rstn => bit_flag.ACLR
rstn => cnt[0].ACLR
rstn => cnt[1].ACLR
rstn => cnt[2].ACLR
rstn => cnt[3].ACLR
rstn => cnt[4].ACLR
rstn => d_rx_data[0].ACLR
rstn => d_rx_data[1].ACLR
rstn => d_rx_data[2].ACLR
rstn => d_rx_data[3].ACLR
rstn => d_rx_data[4].ACLR
rstn => d_rx_data[5].ACLR
rstn => d_rx_data[6].ACLR
rstn => d_rx_data[7].ACLR
rstn => fin_flag.ACLR
rx => d_flip_0.DATAIN
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_flag <= out_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_rs232|tx:tx_0
clk => tx~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => bit_flag.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => bit_cnt[4].CLK
clk => bit_cnt[5].CLK
clk => bit_cnt[6].CLK
clk => bit_cnt[7].CLK
clk => bit_cnt[8].CLK
clk => bit_cnt[9].CLK
clk => bit_cnt[10].CLK
clk => bit_cnt[11].CLK
clk => bit_cnt[12].CLK
clk => bit_cnt[13].CLK
clk => bit_cnt[14].CLK
clk => bit_cnt[15].CLK
clk => bit_cnt[16].CLK
clk => bit_cnt[17].CLK
clk => bit_cnt[18].CLK
clk => bit_cnt[19].CLK
clk => bit_cnt[20].CLK
clk => start_en.CLK
rstn => bit_cnt[0].ACLR
rstn => bit_cnt[1].ACLR
rstn => bit_cnt[2].ACLR
rstn => bit_cnt[3].ACLR
rstn => bit_cnt[4].ACLR
rstn => bit_cnt[5].ACLR
rstn => bit_cnt[6].ACLR
rstn => bit_cnt[7].ACLR
rstn => bit_cnt[8].ACLR
rstn => bit_cnt[9].ACLR
rstn => bit_cnt[10].ACLR
rstn => bit_cnt[11].ACLR
rstn => bit_cnt[12].ACLR
rstn => bit_cnt[13].ACLR
rstn => bit_cnt[14].ACLR
rstn => bit_cnt[15].ACLR
rstn => bit_cnt[16].ACLR
rstn => bit_cnt[17].ACLR
rstn => bit_cnt[18].ACLR
rstn => bit_cnt[19].ACLR
rstn => bit_cnt[20].ACLR
rstn => tx~reg0.PRESET
rstn => start_en.ACLR
rstn => bit_flag.ACLR
rstn => cnt[0].ACLR
rstn => cnt[1].ACLR
rstn => cnt[2].ACLR
rstn => cnt[3].ACLR
rstn => cnt[4].ACLR
data[0] => Mux0.IN31
data[1] => Mux0.IN30
data[2] => Mux0.IN29
data[3] => Mux0.IN28
data[4] => Mux0.IN27
data[5] => Mux0.IN26
data[6] => Mux0.IN25
data[7] => Mux0.IN24
flag => start_en.OUTPUTSELECT
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


